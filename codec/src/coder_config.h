
#ifndef CODER_CONFIG_H
#define CODER_CONFIG_H


#define ADD_GRAD_4 (true)

//quantizers
#define CTX_ST_FINER_QUANT (true) 
#define CTX_ST_PRECISION (8) // number of fractional bits
#define MAX_ST_IDX  (31)//31//25 //(12)

#define CTX_NT_CENTERED_QUANT (true)
#define CTX_NT_PRECISION (6) // number of fractional bits
#define HALF_Y_CODER (true) 

// ANS coder 
#define ANS_MAX_SRC_CARDINALITY (9)
#define EE_MAX_ITERATIONS (7)
#define EE_BUFFER_SIZE (16384)

#define NUM_ANS_THETA_MODES (32)//16 // supported theta_modes
#define NUM_ANS_P_MODES (32) //16 //32 // supported theta_modes
#define LOG2_NUM_ANS_STATES (7)
#define NUM_ANS_STATES (1<<LOG2_NUM_ANS_STATES)  // NUM_ANS_STATES only considers I range

static const uint8_t tANS_cardinality_table[32] = {	1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,8,8,8,8,8,8,8,8,8,8,8,8,8,8};
static const uint32_t max_module_per_cardinality_table[32] = {	1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,1*EE_MAX_ITERATIONS,2*EE_MAX_ITERATIONS,2*EE_MAX_ITERATIONS,2*EE_MAX_ITERATIONS,2*EE_MAX_ITERATIONS,4*EE_MAX_ITERATIONS,4*EE_MAX_ITERATIONS,4*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS,8*EE_MAX_ITERATIONS};


#define ARCH (64)
#endif
